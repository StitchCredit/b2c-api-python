# coding: utf-8

"""
    StitchCredit API

    StitchCredit API  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from ecreditapi.configuration import Configuration


class AlertRespDTO(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'alert_id': 'str',
        'alert_type': 'str',
        'creation_date': 'datetime',
        'data_source': 'str',
        'date_reported': 'datetime',
        'reporting_frequency': 'str',
        'institution_type': 'str',
        'institution_name': 'str',
        'inquiry_intent': 'str',
        'inquiry_type': 'str',
        'end_user_text': 'str',
        'institution_address_line1': 'str',
        'institution_address_line2': 'str',
        'institution_city': 'str',
        'institution_state': 'str',
        'institution_postal_code': 'str',
        'institution_phone_number': 'str',
        'posted_during_maintenance_period': 'bool'
    }

    attribute_map = {
        'id': 'id',
        'alert_id': 'alertId',
        'alert_type': 'alertType',
        'creation_date': 'creationDate',
        'data_source': 'dataSource',
        'date_reported': 'dateReported',
        'reporting_frequency': 'reportingFrequency',
        'institution_type': 'institutionType',
        'institution_name': 'institutionName',
        'inquiry_intent': 'inquiryIntent',
        'inquiry_type': 'inquiryType',
        'end_user_text': 'endUserText',
        'institution_address_line1': 'institutionAddressLine1',
        'institution_address_line2': 'institutionAddressLine2',
        'institution_city': 'institutionCity',
        'institution_state': 'institutionState',
        'institution_postal_code': 'institutionPostalCode',
        'institution_phone_number': 'institutionPhoneNumber',
        'posted_during_maintenance_period': 'postedDuringMaintenancePeriod'
    }

    def __init__(self, id=None, alert_id=None, alert_type=None, creation_date=None, data_source=None, date_reported=None, reporting_frequency=None, institution_type=None, institution_name=None, inquiry_intent=None, inquiry_type=None, end_user_text=None, institution_address_line1=None, institution_address_line2=None, institution_city=None, institution_state=None, institution_postal_code=None, institution_phone_number=None, posted_during_maintenance_period=None, local_vars_configuration=None):  # noqa: E501
        """AlertRespDTO - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._alert_id = None
        self._alert_type = None
        self._creation_date = None
        self._data_source = None
        self._date_reported = None
        self._reporting_frequency = None
        self._institution_type = None
        self._institution_name = None
        self._inquiry_intent = None
        self._inquiry_type = None
        self._end_user_text = None
        self._institution_address_line1 = None
        self._institution_address_line2 = None
        self._institution_city = None
        self._institution_state = None
        self._institution_postal_code = None
        self._institution_phone_number = None
        self._posted_during_maintenance_period = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if alert_id is not None:
            self.alert_id = alert_id
        if alert_type is not None:
            self.alert_type = alert_type
        if creation_date is not None:
            self.creation_date = creation_date
        if data_source is not None:
            self.data_source = data_source
        if date_reported is not None:
            self.date_reported = date_reported
        if reporting_frequency is not None:
            self.reporting_frequency = reporting_frequency
        if institution_type is not None:
            self.institution_type = institution_type
        if institution_name is not None:
            self.institution_name = institution_name
        if inquiry_intent is not None:
            self.inquiry_intent = inquiry_intent
        if inquiry_type is not None:
            self.inquiry_type = inquiry_type
        if end_user_text is not None:
            self.end_user_text = end_user_text
        if institution_address_line1 is not None:
            self.institution_address_line1 = institution_address_line1
        if institution_address_line2 is not None:
            self.institution_address_line2 = institution_address_line2
        if institution_city is not None:
            self.institution_city = institution_city
        if institution_state is not None:
            self.institution_state = institution_state
        if institution_postal_code is not None:
            self.institution_postal_code = institution_postal_code
        if institution_phone_number is not None:
            self.institution_phone_number = institution_phone_number
        if posted_during_maintenance_period is not None:
            self.posted_during_maintenance_period = posted_during_maintenance_period

    @property
    def id(self):
        """Gets the id of this AlertRespDTO.  # noqa: E501


        :return: The id of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlertRespDTO.


        :param id: The id of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def alert_id(self):
        """Gets the alert_id of this AlertRespDTO.  # noqa: E501


        :return: The alert_id of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._alert_id

    @alert_id.setter
    def alert_id(self, alert_id):
        """Sets the alert_id of this AlertRespDTO.


        :param alert_id: The alert_id of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._alert_id = alert_id

    @property
    def alert_type(self):
        """Gets the alert_type of this AlertRespDTO.  # noqa: E501


        :return: The alert_type of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._alert_type

    @alert_type.setter
    def alert_type(self, alert_type):
        """Sets the alert_type of this AlertRespDTO.


        :param alert_type: The alert_type of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._alert_type = alert_type

    @property
    def creation_date(self):
        """Gets the creation_date of this AlertRespDTO.  # noqa: E501


        :return: The creation_date of this AlertRespDTO.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this AlertRespDTO.


        :param creation_date: The creation_date of this AlertRespDTO.  # noqa: E501
        :type: datetime
        """

        self._creation_date = creation_date

    @property
    def data_source(self):
        """Gets the data_source of this AlertRespDTO.  # noqa: E501


        :return: The data_source of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this AlertRespDTO.


        :param data_source: The data_source of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._data_source = data_source

    @property
    def date_reported(self):
        """Gets the date_reported of this AlertRespDTO.  # noqa: E501


        :return: The date_reported of this AlertRespDTO.  # noqa: E501
        :rtype: datetime
        """
        return self._date_reported

    @date_reported.setter
    def date_reported(self, date_reported):
        """Sets the date_reported of this AlertRespDTO.


        :param date_reported: The date_reported of this AlertRespDTO.  # noqa: E501
        :type: datetime
        """

        self._date_reported = date_reported

    @property
    def reporting_frequency(self):
        """Gets the reporting_frequency of this AlertRespDTO.  # noqa: E501


        :return: The reporting_frequency of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._reporting_frequency

    @reporting_frequency.setter
    def reporting_frequency(self, reporting_frequency):
        """Sets the reporting_frequency of this AlertRespDTO.


        :param reporting_frequency: The reporting_frequency of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._reporting_frequency = reporting_frequency

    @property
    def institution_type(self):
        """Gets the institution_type of this AlertRespDTO.  # noqa: E501


        :return: The institution_type of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_type

    @institution_type.setter
    def institution_type(self, institution_type):
        """Sets the institution_type of this AlertRespDTO.


        :param institution_type: The institution_type of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_type = institution_type

    @property
    def institution_name(self):
        """Gets the institution_name of this AlertRespDTO.  # noqa: E501


        :return: The institution_name of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_name

    @institution_name.setter
    def institution_name(self, institution_name):
        """Sets the institution_name of this AlertRespDTO.


        :param institution_name: The institution_name of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_name = institution_name

    @property
    def inquiry_intent(self):
        """Gets the inquiry_intent of this AlertRespDTO.  # noqa: E501


        :return: The inquiry_intent of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._inquiry_intent

    @inquiry_intent.setter
    def inquiry_intent(self, inquiry_intent):
        """Sets the inquiry_intent of this AlertRespDTO.


        :param inquiry_intent: The inquiry_intent of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._inquiry_intent = inquiry_intent

    @property
    def inquiry_type(self):
        """Gets the inquiry_type of this AlertRespDTO.  # noqa: E501


        :return: The inquiry_type of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._inquiry_type

    @inquiry_type.setter
    def inquiry_type(self, inquiry_type):
        """Sets the inquiry_type of this AlertRespDTO.


        :param inquiry_type: The inquiry_type of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._inquiry_type = inquiry_type

    @property
    def end_user_text(self):
        """Gets the end_user_text of this AlertRespDTO.  # noqa: E501


        :return: The end_user_text of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._end_user_text

    @end_user_text.setter
    def end_user_text(self, end_user_text):
        """Sets the end_user_text of this AlertRespDTO.


        :param end_user_text: The end_user_text of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._end_user_text = end_user_text

    @property
    def institution_address_line1(self):
        """Gets the institution_address_line1 of this AlertRespDTO.  # noqa: E501


        :return: The institution_address_line1 of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_address_line1

    @institution_address_line1.setter
    def institution_address_line1(self, institution_address_line1):
        """Sets the institution_address_line1 of this AlertRespDTO.


        :param institution_address_line1: The institution_address_line1 of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_address_line1 = institution_address_line1

    @property
    def institution_address_line2(self):
        """Gets the institution_address_line2 of this AlertRespDTO.  # noqa: E501


        :return: The institution_address_line2 of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_address_line2

    @institution_address_line2.setter
    def institution_address_line2(self, institution_address_line2):
        """Sets the institution_address_line2 of this AlertRespDTO.


        :param institution_address_line2: The institution_address_line2 of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_address_line2 = institution_address_line2

    @property
    def institution_city(self):
        """Gets the institution_city of this AlertRespDTO.  # noqa: E501


        :return: The institution_city of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_city

    @institution_city.setter
    def institution_city(self, institution_city):
        """Sets the institution_city of this AlertRespDTO.


        :param institution_city: The institution_city of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_city = institution_city

    @property
    def institution_state(self):
        """Gets the institution_state of this AlertRespDTO.  # noqa: E501


        :return: The institution_state of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_state

    @institution_state.setter
    def institution_state(self, institution_state):
        """Sets the institution_state of this AlertRespDTO.


        :param institution_state: The institution_state of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_state = institution_state

    @property
    def institution_postal_code(self):
        """Gets the institution_postal_code of this AlertRespDTO.  # noqa: E501


        :return: The institution_postal_code of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_postal_code

    @institution_postal_code.setter
    def institution_postal_code(self, institution_postal_code):
        """Sets the institution_postal_code of this AlertRespDTO.


        :param institution_postal_code: The institution_postal_code of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_postal_code = institution_postal_code

    @property
    def institution_phone_number(self):
        """Gets the institution_phone_number of this AlertRespDTO.  # noqa: E501


        :return: The institution_phone_number of this AlertRespDTO.  # noqa: E501
        :rtype: str
        """
        return self._institution_phone_number

    @institution_phone_number.setter
    def institution_phone_number(self, institution_phone_number):
        """Sets the institution_phone_number of this AlertRespDTO.


        :param institution_phone_number: The institution_phone_number of this AlertRespDTO.  # noqa: E501
        :type: str
        """

        self._institution_phone_number = institution_phone_number

    @property
    def posted_during_maintenance_period(self):
        """Gets the posted_during_maintenance_period of this AlertRespDTO.  # noqa: E501


        :return: The posted_during_maintenance_period of this AlertRespDTO.  # noqa: E501
        :rtype: bool
        """
        return self._posted_during_maintenance_period

    @posted_during_maintenance_period.setter
    def posted_during_maintenance_period(self, posted_during_maintenance_period):
        """Sets the posted_during_maintenance_period of this AlertRespDTO.


        :param posted_during_maintenance_period: The posted_during_maintenance_period of this AlertRespDTO.  # noqa: E501
        :type: bool
        """

        self._posted_during_maintenance_period = posted_during_maintenance_period

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AlertRespDTO):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AlertRespDTO):
            return True

        return self.to_dict() != other.to_dict()
